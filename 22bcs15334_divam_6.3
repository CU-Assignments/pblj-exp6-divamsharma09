import java.util.*;
import java.util.stream.*;

class Product {
    String name, category;
    double price;

    Product(String name, String category, double price) {
        this.name = name;
        this.category = category;
        this.price = price;
    }

    @Override
    public String toString() {
        return name + " (" + category + ") - Price: " + price;
    }
}

public class ProductProcessing {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter number of products: ");
        int n = scanner.nextInt();
        scanner.nextLine(); // Consume newline

        List<Product> products = new ArrayList<>();

        for (int i = 0; i < n; i++) {
            System.out.print("Enter product name: ");
            String name = scanner.nextLine();
            System.out.print("Enter category: ");
            String category = scanner.nextLine();
            System.out.print("Enter price: ");
            double price = scanner.nextDouble();
            scanner.nextLine(); // Consume newline
            products.add(new Product(name, category, price));
        }

        // Grouping by category
        Map<String, List<Product>> groupedByCategory = products.stream()
            .collect(Collectors.groupingBy(p -> p.category));

        // Finding the most expensive product in each category
        Map<String, Optional<Product>> mostExpensiveByCategory = products.stream()
            .collect(Collectors.groupingBy(p -> p.category, 
                     Collectors.maxBy(Comparator.comparing(p -> p.price))));

        // Calculating average price
        double averagePrice = products.stream()
            .mapToDouble(p -> p.price)
            .average()
            .orElse(0);

        System.out.println("\nGrouped by category:");
        groupedByCategory.forEach((category, list) -> {
            System.out.println(category + " -> " + list);
        });

        System.out.println("\nMost expensive product in each category:");
        mostExpensiveByCategory.forEach((category, product) -> 
            System.out.println(category + " -> " + product.get()));
        
        System.out.println("\nAverage price of all products: " + averagePrice);
    }
}
